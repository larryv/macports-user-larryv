# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=portfile:et:sw=4:ts=4:sts=4
# $Id$

PortSystem          1.0
PortGroup           compiler_blacklist_versions 1.0

name                rust
version             0.5
revision            2
categories          lang devel
platforms           darwin
supported_archs     i386 x86_64
# https://github.com/mozilla/rust/issues/2024
universal_variant   no
license             {MIT Apache-2} BSD zlib NCSA Permissive
maintainers         g5pw openmaintainer

description         Compiler for the Rust programming language
long_description    This is a compiler for Rust, including standard \
                    libraries, tools and documentation.
homepage            http://www.rust-lang.org

# ===== stage0 snapshot compiler =====
set stage0(date)                2012-12-19
set stage0(rev)                 8554d5e
set stage0(platform)            macos-${configure.build_arch}
switch ${configure.build_arch} {
    i386 {
        set stage0(hash)        151ff211c01f0b7a1895b93ff0bc021bf1472346
        set stage0(rmd160)      300b17458073a8704817821bd5406189a264f765
        set stage0(sha256)      5e598d4c45ee2dd8b7f2b69d92f60d16e57991e796d76ca255a612357a5e48e0
    }
    x86_64 {
        set stage0(hash)        e4564933f11b17f7dbd25b61032233693da21dc5
        set stage0(rmd160)      3d966bd2d17e3f2c74ed78f3674439c89d5a16ee
        set stage0(sha256)      a2e287a683128e2e213e11c5b9f92e5e628eb63163591d61523549deb2e21f7d
    }
}
# ====================================

set stage0(dist) [join "rust stage0 ${stage0(date)} ${stage0(rev)}
                        ${stage0(platform)} ${stage0(hash)}" -].tar.bz2

master_sites        http://dl.rust-lang.org/dist:dist \
                    http://static.rust-lang.org/stage0-snapshots:stage0
distfiles           ${distname}${extract.suffix}:dist \
                    ${stage0(dist)}:stage0
checksums           ${distname}${extract.suffix} \
                        rmd160  b4988da7be984aa1337f4076e96e6d0c72e3170d \
                        sha256  d326d22707f0562d669c11efbc33ae812ddbf76ab78f07087fc5beb095a8928a \
                    ${stage0(dist)} \
                        rmd160  ${stage0(rmd160)} \
                        sha256  ${stage0(sha256)}

depends_extract     bin:bzip2:bzip2
extract.only-delete ${stage0(dist)}
post-extract {
    set expand "bzip2 -dc ${distpath}/${stage0(dist)}"
    set untar "${portutil::autoconf::tar_command} -xf -"
    system -W ${workpath} "${expand} | ${untar}"
}

patchfiles          patch-configure.diff \
                    patch-src-etc-local_stage0.sh.diff
post-patch {
    reinplace "s/__BUILD_ARCH__/${configure.build_arch}/g" \
        ${worksrcpath}/configure
}

# Upstream only supports GCC 4.4 and newer and Clang based on LLVM
# 3.0svn and newer.
compiler.blacklist  gcc-3.3 gcc-4.0 gcc-4.2 \
                    apple-gcc-4.0 apple-gcc-4.2 \
                    llvm-gcc-4.2 macports-llvm-gcc-4.2 \
                    macports-gcc-4.2 macports-gcc-4.3 \
                    {clang <= 77} macports-clang-2.9

# Use MacPorts' clang as fallback compiler.
# TODO: Remove when base fallback lists are updated (2.2?).
compiler.fallback-append            macports-clang-3.2
if {${configure.compiler} == "macports-clang-3.2"} {
    depends_build-append            port:clang-3.2
    depends_skip_archcheck-append   clang-3.2
}

configure.args      --disable-docs \
                    --enable-local-rust \
                    --local-rust-root=${workpath}/rust-stage0

build.args          CC=${configure.cc} \
                    CXX=${configure.cxx} \
                    CPP=${configure.cpp} \
                    VERBOSE=1

if {[string match *clang* ${configure.compiler}]} {
    configure.args-append   --enable-clang
    build.args-delete       CPP=${configure.cpp}
    build.args-append       CPP="${configure.cc} -E"
}

variant llvm30 conflicts llvm31 llvm32 llvm33 description {Use LLVM 3.0} {
    depends_lib-append      port:llvm-3.0
    configure.args-append   --llvm-root=${prefix}/libexec/llvm-3.0
}
variant llvm31 conflicts llvm30 llvm32 llvm33 description {Use LLVM 3.1} {
    depends_lib-append      port:llvm-3.1
    configure.args-append   --llvm-root=${prefix}/libexec/llvm-3.1
}
variant llvm32 conflicts llvm30 llvm31 llvm33 description {Use LLVM 3.2} {
    depends_lib-append      port:llvm-3.2
    configure.args-append   --llvm-root=${prefix}/libexec/llvm-3.2
}
variant llvm33 conflicts llvm30 llvm31 llvm32 description {Use LLVM 3.3} {
    depends_lib-append      port:llvm-3.3
    configure.args-append   --llvm-root=${prefix}/libexec/llvm-3.3
}

if {![variant_isset llvm30] && ![variant_isset llvm31] &&
    ![variant_isset llvm33]
} then {
    default_variants    +llvm32
}

livecheck.url       ${homepage}/
livecheck.regex     "/release-(\\d\.\\d)/"
